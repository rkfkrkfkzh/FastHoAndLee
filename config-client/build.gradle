plugins {
    id 'java'  // Java 플러그인 추가
    id 'org.springframework.boot' // 버전은 루트에서 관리되므로 명시하지 않음
    id 'io.spring.dependency-management' // 버전은 루트에서 관리되므로 명시하지 않음
}

repositories {
    mavenCentral()
}

// Spring Boot 메인 클래스 설정
bootJar {
    mainClass.set('com.example.fasthoandlee.FastHoAndLeeApplication')  // 메인 클래스 지정
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.3"  // Spring Cloud BOM 설정
    }
}

dependencies {
// Spring Boot WAR 배포 시, 내장 서버(Tomcat 등)는 제공(Provided) 범위로 설정
//    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'  // Spring Cloud Config Client 의존성

    // Spring Cloud Config Server 의존성
    implementation 'org.springframework.cloud:spring-cloud-config-server'

    // vue + springboot 통합 배포시 json, RestController 형식인데 통합 배포시 html,css등 viewResolver처리를 위해 추가?
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-devtools'

//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' //java 17버전 호환
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.2' // MariaDB connector 추가

    // Lombok 의존성 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.14.2'

    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.0')

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2' // If you're using Jackson for JSON processing

    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // 테스트 의존성
}